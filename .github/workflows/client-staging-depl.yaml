name: Client Staging Deployment

on:
  push:
    branches:
      - staging

jobs:
  publish:
    name: Publish Artifact
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Get Smart Tag
        id: prepare
        uses: Surgo/docker-smart-tag-action@v1
        with:
          docker_image: ${{ secrets.DOCKER_USERNAME }}/optimabalita-client
          tag_with_sha: true
      - name: Build and Push Image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.prepare.outputs.tag }}
      - name: Create Docker Tag File
        run: echo "${{ steps.prepare.outputs.tag }}" > docker-tag.txt
      - name: Publish Tag as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker-tag
          path: docker-tag.txt

  deploy:
    name: Deploy to DOKS
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - uses: actions/checkout@v2
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save optimabalita-proj
      - name: Download Tag Artifact
        uses: actions/download-artifact@v2
        with:
          name: docker-tag
      - name: Read Docker Tag from File
        id: read-docker-tag
        run: echo "::set-output name=docker-tag::$(cat docker-tag.txt | awk -F',' '{print $2}' | tr -d '[:space:]')"
      - name: Set Image in Kubernetes Deployment
        run: kubectl set image deployment/optimabalita-client-depl optimabalita-client=${{ steps.read-docker-tag.outputs.docker-tag }}